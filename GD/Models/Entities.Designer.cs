//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("KompShopModel", "FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GD.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Покупатель_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.aspnet_Users), "Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GD.Models.Покупатель), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Доставка_Заказ", "Заказ", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Заказ), "Доставка", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GD.Models.Доставка), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Доставка_Сотрудник", "Сотрудник", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Сотрудник), "Доставка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Доставка), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Заказ_Товар_Заказ", "Заказ", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Заказ), "Заказ_Товар", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Заказ_Товар), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Заказ_Покупатель", "Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GD.Models.Покупатель), "Заказ", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Заказ), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Кредитная_карта_Покупатель", "Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Покупатель), "Кредитная_карта", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Кредитная_карта), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Оценка_Покупатель", "Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Покупатель), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Оценка), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Телефон_Покупатель_Покупатель", "Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Покупатель), "Телефон_Покупатель", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Телефон_Покупатель), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Заказ_Товар_Товар", "Товар", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Товар), "Заказ_Товар", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Заказ_Товар), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Товар_Категория1", "Категория", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Категория), "Товар", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Товар), true)]
[assembly: EdmRelationshipAttribute("KompShopModel", "FK_Оценка_Товар", "Товар", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GD.Models.Товар), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GD.Models.Оценка), true)]

#endregion

namespace GD.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Entities, используя строку соединения из раздела "Entities" файла конфигурации приложения.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Доставка> Доставка
        {
            get
            {
                if ((_Доставка == null))
                {
                    _Доставка = base.CreateObjectSet<Доставка>("Доставка");
                }
                return _Доставка;
            }
        }
        private ObjectSet<Доставка> _Доставка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Заказ> Заказ
        {
            get
            {
                if ((_Заказ == null))
                {
                    _Заказ = base.CreateObjectSet<Заказ>("Заказ");
                }
                return _Заказ;
            }
        }
        private ObjectSet<Заказ> _Заказ;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Заказ_Товар> Заказ_Товар
        {
            get
            {
                if ((_Заказ_Товар == null))
                {
                    _Заказ_Товар = base.CreateObjectSet<Заказ_Товар>("Заказ_Товар");
                }
                return _Заказ_Товар;
            }
        }
        private ObjectSet<Заказ_Товар> _Заказ_Товар;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Кредитная_карта> Кредитная_карта
        {
            get
            {
                if ((_Кредитная_карта == null))
                {
                    _Кредитная_карта = base.CreateObjectSet<Кредитная_карта>("Кредитная_карта");
                }
                return _Кредитная_карта;
            }
        }
        private ObjectSet<Кредитная_карта> _Кредитная_карта;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Оценка> Оценка
        {
            get
            {
                if ((_Оценка == null))
                {
                    _Оценка = base.CreateObjectSet<Оценка>("Оценка");
                }
                return _Оценка;
            }
        }
        private ObjectSet<Оценка> _Оценка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Покупатель> Покупатель
        {
            get
            {
                if ((_Покупатель == null))
                {
                    _Покупатель = base.CreateObjectSet<Покупатель>("Покупатель");
                }
                return _Покупатель;
            }
        }
        private ObjectSet<Покупатель> _Покупатель;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Сотрудник> Сотрудник
        {
            get
            {
                if ((_Сотрудник == null))
                {
                    _Сотрудник = base.CreateObjectSet<Сотрудник>("Сотрудник");
                }
                return _Сотрудник;
            }
        }
        private ObjectSet<Сотрудник> _Сотрудник;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Телефон_Покупатель> Телефон_Покупатель
        {
            get
            {
                if ((_Телефон_Покупатель == null))
                {
                    _Телефон_Покупатель = base.CreateObjectSet<Телефон_Покупатель>("Телефон_Покупатель");
                }
                return _Телефон_Покупатель;
            }
        }
        private ObjectSet<Телефон_Покупатель> _Телефон_Покупатель;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Доставка> View_Доставка
        {
            get
            {
                if ((_View_Доставка == null))
                {
                    _View_Доставка = base.CreateObjectSet<View_Доставка>("View_Доставка");
                }
                return _View_Доставка;
            }
        }
        private ObjectSet<View_Доставка> _View_Доставка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Заказ2> View_Заказ2
        {
            get
            {
                if ((_View_Заказ2 == null))
                {
                    _View_Заказ2 = base.CreateObjectSet<View_Заказ2>("View_Заказ2");
                }
                return _View_Заказ2;
            }
        }
        private ObjectSet<View_Заказ2> _View_Заказ2;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Корзина> View_Корзина
        {
            get
            {
                if ((_View_Корзина == null))
                {
                    _View_Корзина = base.CreateObjectSet<View_Корзина>("View_Корзина");
                }
                return _View_Корзина;
            }
        }
        private ObjectSet<View_Корзина> _View_Корзина;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Оформленный_заказ> View_Оформленный_заказ
        {
            get
            {
                if ((_View_Оформленный_заказ == null))
                {
                    _View_Оформленный_заказ = base.CreateObjectSet<View_Оформленный_заказ>("View_Оформленный_заказ");
                }
                return _View_Оформленный_заказ;
            }
        }
        private ObjectSet<View_Оформленный_заказ> _View_Оформленный_заказ;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Покупатель2> View_Покупатель2
        {
            get
            {
                if ((_View_Покупатель2 == null))
                {
                    _View_Покупатель2 = base.CreateObjectSet<View_Покупатель2>("View_Покупатель2");
                }
                return _View_Покупатель2;
            }
        }
        private ObjectSet<View_Покупатель2> _View_Покупатель2;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Пользователь> View_Пользователь
        {
            get
            {
                if ((_View_Пользователь == null))
                {
                    _View_Пользователь = base.CreateObjectSet<View_Пользователь>("View_Пользователь");
                }
                return _View_Пользователь;
            }
        }
        private ObjectSet<View_Пользователь> _View_Пользователь;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Товар> View_Товар
        {
            get
            {
                if ((_View_Товар == null))
                {
                    _View_Товар = base.CreateObjectSet<View_Товар>("View_Товар");
                }
                return _View_Товар;
            }
        }
        private ObjectSet<View_Товар> _View_Товар;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<View_Товары> View_Товары
        {
            get
            {
                if ((_View_Товары == null))
                {
                    _View_Товары = base.CreateObjectSet<View_Товары>("View_Товары");
                }
                return _View_Товары;
            }
        }
        private ObjectSet<View_Товары> _View_Товары;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Категория> Категория
        {
            get
            {
                if ((_Категория == null))
                {
                    _Категория = base.CreateObjectSet<Категория>("Категория");
                }
                return _Категория;
            }
        }
        private ObjectSet<Категория> _Категория;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Товар> Товар
        {
            get
            {
                if ((_Товар == null))
                {
                    _Товар = base.CreateObjectSet<Товар>("Товар");
                }
                return _Товар;
            }
        }
        private ObjectSet<Товар> _Товар;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Membership. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Доставка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToДоставка(Доставка доставка)
        {
            base.AddObject("Доставка", доставка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Заказ. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToЗаказ(Заказ заказ)
        {
            base.AddObject("Заказ", заказ);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Заказ_Товар. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToЗаказ_Товар(Заказ_Товар заказ_Товар)
        {
            base.AddObject("Заказ_Товар", заказ_Товар);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Кредитная_карта. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКредитная_карта(Кредитная_карта кредитная_карта)
        {
            base.AddObject("Кредитная_карта", кредитная_карта);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Оценка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОценка(Оценка оценка)
        {
            base.AddObject("Оценка", оценка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Покупатель. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToПокупатель(Покупатель покупатель)
        {
            base.AddObject("Покупатель", покупатель);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Сотрудник. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСотрудник(Сотрудник сотрудник)
        {
            base.AddObject("Сотрудник", сотрудник);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Телефон_Покупатель. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToТелефон_Покупатель(Телефон_Покупатель телефон_Покупатель)
        {
            base.AddObject("Телефон_Покупатель", телефон_Покупатель);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Доставка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Доставка(View_Доставка view_Доставка)
        {
            base.AddObject("View_Доставка", view_Доставка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Заказ2. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Заказ2(View_Заказ2 view_Заказ2)
        {
            base.AddObject("View_Заказ2", view_Заказ2);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Корзина. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Корзина(View_Корзина view_Корзина)
        {
            base.AddObject("View_Корзина", view_Корзина);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Оформленный_заказ. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Оформленный_заказ(View_Оформленный_заказ view_Оформленный_заказ)
        {
            base.AddObject("View_Оформленный_заказ", view_Оформленный_заказ);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Покупатель2. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Покупатель2(View_Покупатель2 view_Покупатель2)
        {
            base.AddObject("View_Покупатель2", view_Покупатель2);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Пользователь. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Пользователь(View_Пользователь view_Пользователь)
        {
            base.AddObject("View_Пользователь", view_Пользователь);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Товар. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Товар(View_Товар view_Товар)
        {
            base.AddObject("View_Товар", view_Товар);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet View_Товары. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToView_Товары(View_Товары view_Товары)
        {
            base.AddObject("View_Товары", view_Товары);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Категория. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКатегория(Категория категория)
        {
            base.AddObject("Категория", категория);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Товар. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToТовар(Товар товар)
        {
            base.AddObject("Товар", товар);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Membership.
        /// </summary>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="passwordFormat">Исходное значение свойства PasswordFormat.</param>
        /// <param name="passwordSalt">Исходное значение свойства PasswordSalt.</param>
        /// <param name="isApproved">Исходное значение свойства IsApproved.</param>
        /// <param name="isLockedOut">Исходное значение свойства IsLockedOut.</param>
        /// <param name="createDate">Исходное значение свойства CreateDate.</param>
        /// <param name="lastLoginDate">Исходное значение свойства LastLoginDate.</param>
        /// <param name="lastPasswordChangedDate">Исходное значение свойства LastPasswordChangedDate.</param>
        /// <param name="lastLockoutDate">Исходное значение свойства LastLockoutDate.</param>
        /// <param name="failedPasswordAttemptCount">Исходное значение свойства FailedPasswordAttemptCount.</param>
        /// <param name="failedPasswordAttemptWindowStart">Исходное значение свойства FailedPasswordAttemptWindowStart.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Исходное значение свойства FailedPasswordAnswerAttemptCount.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Исходное значение свойства FailedPasswordAnswerAttemptWindowStart.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Users.
        /// </summary>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="userName">Исходное значение свойства UserName.</param>
        /// <param name="loweredUserName">Исходное значение свойства LoweredUserName.</param>
        /// <param name="isAnonymous">Исходное значение свойства IsAnonymous.</param>
        /// <param name="lastActivityDate">Исходное значение свойства LastActivityDate.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("KompShopModel.FK__aspnet_Me__UserI__6D0D32F4", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Покупатель_aspnet_Users1", "Покупатель")]
        public Покупатель Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Покупатель_aspnet_Users1", "Покупатель").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Покупатель_aspnet_Users1", "Покупатель").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Покупатель> ПокупательReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Покупатель_aspnet_Users1", "Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Покупатель>("KompShopModel.FK_Покупатель_aspnet_Users1", "Покупатель", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Доставка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Доставка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Доставка.
        /// </summary>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="суммарный_вес">Исходное значение свойства Суммарный_вес.</param>
        /// <param name="суммарный_объем">Исходное значение свойства Суммарный_объем.</param>
        /// <param name="дата_доставки">Исходное значение свойства Дата_доставки.</param>
        /// <param name="стоимость_доставки">Исходное значение свойства Стоимость_доставки.</param>
        /// <param name="удаленность_от_офиса_км">Исходное значение свойства Удаленность_от_офиса_км.</param>
        /// <param name="статус_доставки">Исходное значение свойства Статус_доставки.</param>
        /// <param name="вид_доставки">Исходное значение свойства Вид_доставки.</param>
        /// <param name="статус_заказа">Исходное значение свойства Статус_заказа.</param>
        /// <param name="стоимость_заказа">Исходное значение свойства Стоимость_заказа.</param>
        /// <param name="способ_оплаты">Исходное значение свойства Способ_оплаты.</param>
        /// <param name="способ_получения">Исходное значение свойства Способ_получения.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        public static View_Доставка CreateView_Доставка(global::System.Int64 c__заказа, global::System.Decimal суммарный_вес, global::System.Int32 суммарный_объем, global::System.DateTime дата_доставки, global::System.Decimal стоимость_доставки, global::System.Int64 удаленность_от_офиса_км, global::System.String статус_доставки, global::System.String вид_доставки, global::System.String статус_заказа, global::System.Decimal стоимость_заказа, global::System.String способ_оплаты, global::System.String способ_получения, global::System.String фИО, global::System.Int64 телефон, global::System.String название)
        {
            View_Доставка view_Доставка = new View_Доставка();
            view_Доставка.C__заказа = c__заказа;
            view_Доставка.Суммарный_вес = суммарный_вес;
            view_Доставка.Суммарный_объем = суммарный_объем;
            view_Доставка.Дата_доставки = дата_доставки;
            view_Доставка.Стоимость_доставки = стоимость_доставки;
            view_Доставка.Удаленность_от_офиса_км = удаленность_от_офиса_км;
            view_Доставка.Статус_доставки = статус_доставки;
            view_Доставка.Вид_доставки = вид_доставки;
            view_Доставка.Статус_заказа = статус_заказа;
            view_Доставка.Стоимость_заказа = стоимость_заказа;
            view_Доставка.Способ_оплаты = способ_оплаты;
            view_Доставка.Способ_получения = способ_получения;
            view_Доставка.ФИО = фИО;
            view_Доставка.Телефон = телефон;
            view_Доставка.Название = название;
            return view_Доставка;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                if (_C__заказа != value)
                {
                    OnC__заказаChanging(value);
                    ReportPropertyChanging("C__заказа");
                    _C__заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C__заказа");
                    OnC__заказаChanged();
                }
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Суммарный_вес
        {
            get
            {
                return _Суммарный_вес;
            }
            set
            {
                if (_Суммарный_вес != value)
                {
                    OnСуммарный_весChanging(value);
                    ReportPropertyChanging("Суммарный_вес");
                    _Суммарный_вес = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Суммарный_вес");
                    OnСуммарный_весChanged();
                }
            }
        }
        private global::System.Decimal _Суммарный_вес;
        partial void OnСуммарный_весChanging(global::System.Decimal value);
        partial void OnСуммарный_весChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Суммарный_объем
        {
            get
            {
                return _Суммарный_объем;
            }
            set
            {
                if (_Суммарный_объем != value)
                {
                    OnСуммарный_объемChanging(value);
                    ReportPropertyChanging("Суммарный_объем");
                    _Суммарный_объем = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Суммарный_объем");
                    OnСуммарный_объемChanged();
                }
            }
        }
        private global::System.Int32 _Суммарный_объем;
        partial void OnСуммарный_объемChanging(global::System.Int32 value);
        partial void OnСуммарный_объемChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_доставки
        {
            get
            {
                return _Дата_доставки;
            }
            set
            {
                if (_Дата_доставки != value)
                {
                    OnДата_доставкиChanging(value);
                    ReportPropertyChanging("Дата_доставки");
                    _Дата_доставки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_доставки");
                    OnДата_доставкиChanged();
                }
            }
        }
        private global::System.DateTime _Дата_доставки;
        partial void OnДата_доставкиChanging(global::System.DateTime value);
        partial void OnДата_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Время_доставки
        {
            get
            {
                return _Время_доставки;
            }
            set
            {
                OnВремя_доставкиChanging(value);
                ReportPropertyChanging("Время_доставки");
                _Время_доставки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Время_доставки");
                OnВремя_доставкиChanged();
            }
        }
        private Nullable<global::System.DateTime> _Время_доставки;
        partial void OnВремя_доставкиChanging(Nullable<global::System.DateTime> value);
        partial void OnВремя_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_доставки
        {
            get
            {
                return _Стоимость_доставки;
            }
            set
            {
                if (_Стоимость_доставки != value)
                {
                    OnСтоимость_доставкиChanging(value);
                    ReportPropertyChanging("Стоимость_доставки");
                    _Стоимость_доставки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Стоимость_доставки");
                    OnСтоимость_доставкиChanged();
                }
            }
        }
        private global::System.Decimal _Стоимость_доставки;
        partial void OnСтоимость_доставкиChanging(global::System.Decimal value);
        partial void OnСтоимость_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Удаленность_от_офиса_км
        {
            get
            {
                return _Удаленность_от_офиса_км;
            }
            set
            {
                if (_Удаленность_от_офиса_км != value)
                {
                    OnУдаленность_от_офиса_кмChanging(value);
                    ReportPropertyChanging("Удаленность_от_офиса_км");
                    _Удаленность_от_офиса_км = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Удаленность_от_офиса_км");
                    OnУдаленность_от_офиса_кмChanged();
                }
            }
        }
        private global::System.Int64 _Удаленность_от_офиса_км;
        partial void OnУдаленность_от_офиса_кмChanging(global::System.Int64 value);
        partial void OnУдаленность_от_офиса_кмChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Статус_доставки
        {
            get
            {
                return _Статус_доставки;
            }
            set
            {
                if (_Статус_доставки != value)
                {
                    OnСтатус_доставкиChanging(value);
                    ReportPropertyChanging("Статус_доставки");
                    _Статус_доставки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Статус_доставки");
                    OnСтатус_доставкиChanged();
                }
            }
        }
        private global::System.String _Статус_доставки;
        partial void OnСтатус_доставкиChanging(global::System.String value);
        partial void OnСтатус_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Вид_доставки
        {
            get
            {
                return _Вид_доставки;
            }
            set
            {
                if (_Вид_доставки != value)
                {
                    OnВид_доставкиChanging(value);
                    ReportPropertyChanging("Вид_доставки");
                    _Вид_доставки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Вид_доставки");
                    OnВид_доставкиChanged();
                }
            }
        }
        private global::System.String _Вид_доставки;
        partial void OnВид_доставкиChanging(global::System.String value);
        partial void OnВид_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Статус_заказа
        {
            get
            {
                return _Статус_заказа;
            }
            set
            {
                if (_Статус_заказа != value)
                {
                    OnСтатус_заказаChanging(value);
                    ReportPropertyChanging("Статус_заказа");
                    _Статус_заказа = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Статус_заказа");
                    OnСтатус_заказаChanged();
                }
            }
        }
        private global::System.String _Статус_заказа;
        partial void OnСтатус_заказаChanging(global::System.String value);
        partial void OnСтатус_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_заказа
        {
            get
            {
                return _Стоимость_заказа;
            }
            set
            {
                if (_Стоимость_заказа != value)
                {
                    OnСтоимость_заказаChanging(value);
                    ReportPropertyChanging("Стоимость_заказа");
                    _Стоимость_заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Стоимость_заказа");
                    OnСтоимость_заказаChanged();
                }
            }
        }
        private global::System.Decimal _Стоимость_заказа;
        partial void OnСтоимость_заказаChanging(global::System.Decimal value);
        partial void OnСтоимость_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_оплаты
        {
            get
            {
                return _Способ_оплаты;
            }
            set
            {
                if (_Способ_оплаты != value)
                {
                    OnСпособ_оплатыChanging(value);
                    ReportPropertyChanging("Способ_оплаты");
                    _Способ_оплаты = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Способ_оплаты");
                    OnСпособ_оплатыChanged();
                }
            }
        }
        private global::System.String _Способ_оплаты;
        partial void OnСпособ_оплатыChanging(global::System.String value);
        partial void OnСпособ_оплатыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_получения
        {
            get
            {
                return _Способ_получения;
            }
            set
            {
                if (_Способ_получения != value)
                {
                    OnСпособ_полученияChanging(value);
                    ReportPropertyChanging("Способ_получения");
                    _Способ_получения = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Способ_получения");
                    OnСпособ_полученияChanged();
                }
            }
        }
        private global::System.String _Способ_получения;
        partial void OnСпособ_полученияChanging(global::System.String value);
        partial void OnСпособ_полученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                if (_ФИО != value)
                {
                    OnФИОChanging(value);
                    ReportPropertyChanging("ФИО");
                    _ФИО = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ФИО");
                    OnФИОChanged();
                }
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                if (_Телефон != value)
                {
                    OnТелефонChanging(value);
                    ReportPropertyChanging("Телефон");
                    _Телефон = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Телефон");
                    OnТелефонChanged();
                }
            }
        }
        private global::System.Int64 _Телефон;
        partial void OnТелефонChanging(global::System.Int64 value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                if (_Название != value)
                {
                    OnНазваниеChanging(value);
                    ReportPropertyChanging("Название");
                    _Название = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Название");
                    OnНазваниеChanged();
                }
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Разрешение_на_возврат_товара
        {
            get
            {
                return _Разрешение_на_возврат_товара;
            }
            set
            {
                OnРазрешение_на_возврат_товараChanging(value);
                ReportPropertyChanging("Разрешение_на_возврат_товара");
                _Разрешение_на_возврат_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Разрешение_на_возврат_товара");
                OnРазрешение_на_возврат_товараChanged();
            }
        }
        private Nullable<global::System.Boolean> _Разрешение_на_возврат_товара;
        partial void OnРазрешение_на_возврат_товараChanging(Nullable<global::System.Boolean> value);
        partial void OnРазрешение_на_возврат_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Изображение
        {
            get
            {
                return StructuralObject.GetValidValue(_Изображение);
            }
            set
            {
                OnИзображениеChanging(value);
                ReportPropertyChanging("Изображение");
                _Изображение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Изображение");
                OnИзображениеChanged();
            }
        }
        private global::System.Byte[] _Изображение;
        partial void OnИзображениеChanging(global::System.Byte[] value);
        partial void OnИзображениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Количество
        {
            get
            {
                return _Количество;
            }
            set
            {
                OnКоличествоChanging(value);
                ReportPropertyChanging("Количество");
                _Количество = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Количество");
                OnКоличествоChanged();
            }
        }
        private Nullable<global::System.Int32> _Количество;
        partial void OnКоличествоChanging(Nullable<global::System.Int32> value);
        partial void OnКоличествоChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Заказ2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Заказ2 : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Заказ2.
        /// </summary>
        /// <param name="категория">Исходное значение свойства Категория.</param>
        /// <param name="цена_товара">Исходное значение свойства Цена_товара.</param>
        /// <param name="вес_товара">Исходное значение свойства Вес_товара.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="дата_заказа">Исходное значение свойства Дата_заказа.</param>
        /// <param name="статус_заказа">Исходное значение свойства Статус_заказа.</param>
        /// <param name="стоимость_заказа">Исходное значение свойства Стоимость_заказа.</param>
        /// <param name="способ_оплаты">Исходное значение свойства Способ_оплаты.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        public static View_Заказ2 CreateView_Заказ2(global::System.String категория, global::System.Decimal цена_товара, global::System.Decimal вес_товара, global::System.String название, global::System.DateTime дата_заказа, global::System.String статус_заказа, global::System.Decimal стоимость_заказа, global::System.String способ_оплаты, global::System.String фИО)
        {
            View_Заказ2 view_Заказ2 = new View_Заказ2();
            view_Заказ2.Категория = категория;
            view_Заказ2.Цена_товара = цена_товара;
            view_Заказ2.Вес_товара = вес_товара;
            view_Заказ2.Название = название;
            view_Заказ2.Дата_заказа = дата_заказа;
            view_Заказ2.Статус_заказа = статус_заказа;
            view_Заказ2.Стоимость_заказа = стоимость_заказа;
            view_Заказ2.Способ_оплаты = способ_оплаты;
            view_Заказ2.ФИО = фИО;
            return view_Заказ2;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Категория
        {
            get
            {
                return _Категория;
            }
            set
            {
                if (_Категория != value)
                {
                    OnКатегорияChanging(value);
                    ReportPropertyChanging("Категория");
                    _Категория = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Категория");
                    OnКатегорияChanged();
                }
            }
        }
        private global::System.String _Категория;
        partial void OnКатегорияChanging(global::System.String value);
        partial void OnКатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Подкатегория
        {
            get
            {
                return _Подкатегория;
            }
            set
            {
                OnПодкатегорияChanging(value);
                ReportPropertyChanging("Подкатегория");
                _Подкатегория = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Подкатегория");
                OnПодкатегорияChanged();
            }
        }
        private global::System.String _Подкатегория;
        partial void OnПодкатегорияChanging(global::System.String value);
        partial void OnПодкатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Цена_товара
        {
            get
            {
                return _Цена_товара;
            }
            set
            {
                if (_Цена_товара != value)
                {
                    OnЦена_товараChanging(value);
                    ReportPropertyChanging("Цена_товара");
                    _Цена_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Цена_товара");
                    OnЦена_товараChanged();
                }
            }
        }
        private global::System.Decimal _Цена_товара;
        partial void OnЦена_товараChanging(global::System.Decimal value);
        partial void OnЦена_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Вес_товара
        {
            get
            {
                return _Вес_товара;
            }
            set
            {
                if (_Вес_товара != value)
                {
                    OnВес_товараChanging(value);
                    ReportPropertyChanging("Вес_товара");
                    _Вес_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Вес_товара");
                    OnВес_товараChanged();
                }
            }
        }
        private global::System.Decimal _Вес_товара;
        partial void OnВес_товараChanging(global::System.Decimal value);
        partial void OnВес_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                if (_Название != value)
                {
                    OnНазваниеChanging(value);
                    ReportPropertyChanging("Название");
                    _Название = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Название");
                    OnНазваниеChanged();
                }
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_заказа
        {
            get
            {
                return _Дата_заказа;
            }
            set
            {
                if (_Дата_заказа != value)
                {
                    OnДата_заказаChanging(value);
                    ReportPropertyChanging("Дата_заказа");
                    _Дата_заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_заказа");
                    OnДата_заказаChanged();
                }
            }
        }
        private global::System.DateTime _Дата_заказа;
        partial void OnДата_заказаChanging(global::System.DateTime value);
        partial void OnДата_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Статус_заказа
        {
            get
            {
                return _Статус_заказа;
            }
            set
            {
                if (_Статус_заказа != value)
                {
                    OnСтатус_заказаChanging(value);
                    ReportPropertyChanging("Статус_заказа");
                    _Статус_заказа = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Статус_заказа");
                    OnСтатус_заказаChanged();
                }
            }
        }
        private global::System.String _Статус_заказа;
        partial void OnСтатус_заказаChanging(global::System.String value);
        partial void OnСтатус_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_заказа
        {
            get
            {
                return _Стоимость_заказа;
            }
            set
            {
                if (_Стоимость_заказа != value)
                {
                    OnСтоимость_заказаChanging(value);
                    ReportPropertyChanging("Стоимость_заказа");
                    _Стоимость_заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Стоимость_заказа");
                    OnСтоимость_заказаChanged();
                }
            }
        }
        private global::System.Decimal _Стоимость_заказа;
        partial void OnСтоимость_заказаChanging(global::System.Decimal value);
        partial void OnСтоимость_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_оплаты
        {
            get
            {
                return _Способ_оплаты;
            }
            set
            {
                if (_Способ_оплаты != value)
                {
                    OnСпособ_оплатыChanging(value);
                    ReportPropertyChanging("Способ_оплаты");
                    _Способ_оплаты = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Способ_оплаты");
                    OnСпособ_оплатыChanged();
                }
            }
        }
        private global::System.String _Способ_оплаты;
        partial void OnСпособ_оплатыChanging(global::System.String value);
        partial void OnСпособ_оплатыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                if (_ФИО != value)
                {
                    OnФИОChanging(value);
                    ReportPropertyChanging("ФИО");
                    _ФИО = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ФИО");
                    OnФИОChanged();
                }
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Корзина")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Корзина : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Корзина.
        /// </summary>
        /// <param name="категория">Исходное значение свойства Категория.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="цена_товара">Исходное значение свойства Цена_товара.</param>
        public static View_Корзина CreateView_Корзина(global::System.String категория, global::System.String название, global::System.Int64 c__заказа, global::System.Decimal цена_товара)
        {
            View_Корзина view_Корзина = new View_Корзина();
            view_Корзина.Категория = категория;
            view_Корзина.Название = название;
            view_Корзина.C__заказа = c__заказа;
            view_Корзина.Цена_товара = цена_товара;
            return view_Корзина;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Категория
        {
            get
            {
                return _Категория;
            }
            set
            {
                if (_Категория != value)
                {
                    OnКатегорияChanging(value);
                    ReportPropertyChanging("Категория");
                    _Категория = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Категория");
                    OnКатегорияChanged();
                }
            }
        }
        private global::System.String _Категория;
        partial void OnКатегорияChanging(global::System.String value);
        partial void OnКатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Подкатегория
        {
            get
            {
                return _Подкатегория;
            }
            set
            {
                OnПодкатегорияChanging(value);
                ReportPropertyChanging("Подкатегория");
                _Подкатегория = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Подкатегория");
                OnПодкатегорияChanged();
            }
        }
        private global::System.String _Подкатегория;
        partial void OnПодкатегорияChanging(global::System.String value);
        partial void OnПодкатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                if (_Название != value)
                {
                    OnНазваниеChanging(value);
                    ReportPropertyChanging("Название");
                    _Название = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Название");
                    OnНазваниеChanged();
                }
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                if (_C__заказа != value)
                {
                    OnC__заказаChanging(value);
                    ReportPropertyChanging("C__заказа");
                    _C__заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C__заказа");
                    OnC__заказаChanged();
                }
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Количество
        {
            get
            {
                return _Количество;
            }
            set
            {
                OnКоличествоChanging(value);
                ReportPropertyChanging("Количество");
                _Количество = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Количество");
                OnКоличествоChanged();
            }
        }
        private Nullable<global::System.Int32> _Количество;
        partial void OnКоличествоChanging(Nullable<global::System.Int32> value);
        partial void OnКоличествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Цена_товара
        {
            get
            {
                return _Цена_товара;
            }
            set
            {
                if (_Цена_товара != value)
                {
                    OnЦена_товараChanging(value);
                    ReportPropertyChanging("Цена_товара");
                    _Цена_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Цена_товара");
                    OnЦена_товараChanged();
                }
            }
        }
        private global::System.Decimal _Цена_товара;
        partial void OnЦена_товараChanging(global::System.Decimal value);
        partial void OnЦена_товараChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Оформленный_заказ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Оформленный_заказ : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Оформленный_заказ.
        /// </summary>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="суммарный_вес">Исходное значение свойства Суммарный_вес.</param>
        /// <param name="суммарный_объем">Исходное значение свойства Суммарный_объем.</param>
        /// <param name="дата_доставки">Исходное значение свойства Дата_доставки.</param>
        /// <param name="стоимость_доставки">Исходное значение свойства Стоимость_доставки.</param>
        /// <param name="удаленность_от_офиса_км">Исходное значение свойства Удаленность_от_офиса_км.</param>
        /// <param name="вид_доставки">Исходное значение свойства Вид_доставки.</param>
        /// <param name="дата_заказа">Исходное значение свойства Дата_заказа.</param>
        /// <param name="стоимость_заказа">Исходное значение свойства Стоимость_заказа.</param>
        /// <param name="способ_оплаты">Исходное значение свойства Способ_оплаты.</param>
        /// <param name="способ_получения">Исходное значение свойства Способ_получения.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        public static View_Оформленный_заказ CreateView_Оформленный_заказ(global::System.Int64 c__заказа, global::System.Decimal суммарный_вес, global::System.Int32 суммарный_объем, global::System.DateTime дата_доставки, global::System.Decimal стоимость_доставки, global::System.Int64 удаленность_от_офиса_км, global::System.String вид_доставки, global::System.DateTime дата_заказа, global::System.Decimal стоимость_заказа, global::System.String способ_оплаты, global::System.String способ_получения, global::System.String фИО)
        {
            View_Оформленный_заказ view_Оформленный_заказ = new View_Оформленный_заказ();
            view_Оформленный_заказ.C__заказа = c__заказа;
            view_Оформленный_заказ.Суммарный_вес = суммарный_вес;
            view_Оформленный_заказ.Суммарный_объем = суммарный_объем;
            view_Оформленный_заказ.Дата_доставки = дата_доставки;
            view_Оформленный_заказ.Стоимость_доставки = стоимость_доставки;
            view_Оформленный_заказ.Удаленность_от_офиса_км = удаленность_от_офиса_км;
            view_Оформленный_заказ.Вид_доставки = вид_доставки;
            view_Оформленный_заказ.Дата_заказа = дата_заказа;
            view_Оформленный_заказ.Стоимость_заказа = стоимость_заказа;
            view_Оформленный_заказ.Способ_оплаты = способ_оплаты;
            view_Оформленный_заказ.Способ_получения = способ_получения;
            view_Оформленный_заказ.ФИО = фИО;
            return view_Оформленный_заказ;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                if (_C__заказа != value)
                {
                    OnC__заказаChanging(value);
                    ReportPropertyChanging("C__заказа");
                    _C__заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C__заказа");
                    OnC__заказаChanged();
                }
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Суммарный_вес
        {
            get
            {
                return _Суммарный_вес;
            }
            set
            {
                if (_Суммарный_вес != value)
                {
                    OnСуммарный_весChanging(value);
                    ReportPropertyChanging("Суммарный_вес");
                    _Суммарный_вес = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Суммарный_вес");
                    OnСуммарный_весChanged();
                }
            }
        }
        private global::System.Decimal _Суммарный_вес;
        partial void OnСуммарный_весChanging(global::System.Decimal value);
        partial void OnСуммарный_весChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Суммарный_объем
        {
            get
            {
                return _Суммарный_объем;
            }
            set
            {
                if (_Суммарный_объем != value)
                {
                    OnСуммарный_объемChanging(value);
                    ReportPropertyChanging("Суммарный_объем");
                    _Суммарный_объем = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Суммарный_объем");
                    OnСуммарный_объемChanged();
                }
            }
        }
        private global::System.Int32 _Суммарный_объем;
        partial void OnСуммарный_объемChanging(global::System.Int32 value);
        partial void OnСуммарный_объемChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_доставки
        {
            get
            {
                return _Дата_доставки;
            }
            set
            {
                if (_Дата_доставки != value)
                {
                    OnДата_доставкиChanging(value);
                    ReportPropertyChanging("Дата_доставки");
                    _Дата_доставки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_доставки");
                    OnДата_доставкиChanged();
                }
            }
        }
        private global::System.DateTime _Дата_доставки;
        partial void OnДата_доставкиChanging(global::System.DateTime value);
        partial void OnДата_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Время_доставки
        {
            get
            {
                return _Время_доставки;
            }
            set
            {
                OnВремя_доставкиChanging(value);
                ReportPropertyChanging("Время_доставки");
                _Время_доставки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Время_доставки");
                OnВремя_доставкиChanged();
            }
        }
        private Nullable<global::System.DateTime> _Время_доставки;
        partial void OnВремя_доставкиChanging(Nullable<global::System.DateTime> value);
        partial void OnВремя_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_доставки
        {
            get
            {
                return _Стоимость_доставки;
            }
            set
            {
                if (_Стоимость_доставки != value)
                {
                    OnСтоимость_доставкиChanging(value);
                    ReportPropertyChanging("Стоимость_доставки");
                    _Стоимость_доставки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Стоимость_доставки");
                    OnСтоимость_доставкиChanged();
                }
            }
        }
        private global::System.Decimal _Стоимость_доставки;
        partial void OnСтоимость_доставкиChanging(global::System.Decimal value);
        partial void OnСтоимость_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Удаленность_от_офиса_км
        {
            get
            {
                return _Удаленность_от_офиса_км;
            }
            set
            {
                if (_Удаленность_от_офиса_км != value)
                {
                    OnУдаленность_от_офиса_кмChanging(value);
                    ReportPropertyChanging("Удаленность_от_офиса_км");
                    _Удаленность_от_офиса_км = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Удаленность_от_офиса_км");
                    OnУдаленность_от_офиса_кмChanged();
                }
            }
        }
        private global::System.Int64 _Удаленность_от_офиса_км;
        partial void OnУдаленность_от_офиса_кмChanging(global::System.Int64 value);
        partial void OnУдаленность_от_офиса_кмChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Вид_доставки
        {
            get
            {
                return _Вид_доставки;
            }
            set
            {
                if (_Вид_доставки != value)
                {
                    OnВид_доставкиChanging(value);
                    ReportPropertyChanging("Вид_доставки");
                    _Вид_доставки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Вид_доставки");
                    OnВид_доставкиChanged();
                }
            }
        }
        private global::System.String _Вид_доставки;
        partial void OnВид_доставкиChanging(global::System.String value);
        partial void OnВид_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_заказа
        {
            get
            {
                return _Дата_заказа;
            }
            set
            {
                if (_Дата_заказа != value)
                {
                    OnДата_заказаChanging(value);
                    ReportPropertyChanging("Дата_заказа");
                    _Дата_заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_заказа");
                    OnДата_заказаChanged();
                }
            }
        }
        private global::System.DateTime _Дата_заказа;
        partial void OnДата_заказаChanging(global::System.DateTime value);
        partial void OnДата_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Время_заказа
        {
            get
            {
                return _Время_заказа;
            }
            set
            {
                OnВремя_заказаChanging(value);
                ReportPropertyChanging("Время_заказа");
                _Время_заказа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Время_заказа");
                OnВремя_заказаChanged();
            }
        }
        private Nullable<global::System.DateTime> _Время_заказа;
        partial void OnВремя_заказаChanging(Nullable<global::System.DateTime> value);
        partial void OnВремя_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_заказа
        {
            get
            {
                return _Стоимость_заказа;
            }
            set
            {
                if (_Стоимость_заказа != value)
                {
                    OnСтоимость_заказаChanging(value);
                    ReportPropertyChanging("Стоимость_заказа");
                    _Стоимость_заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Стоимость_заказа");
                    OnСтоимость_заказаChanged();
                }
            }
        }
        private global::System.Decimal _Стоимость_заказа;
        partial void OnСтоимость_заказаChanging(global::System.Decimal value);
        partial void OnСтоимость_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_оплаты
        {
            get
            {
                return _Способ_оплаты;
            }
            set
            {
                if (_Способ_оплаты != value)
                {
                    OnСпособ_оплатыChanging(value);
                    ReportPropertyChanging("Способ_оплаты");
                    _Способ_оплаты = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Способ_оплаты");
                    OnСпособ_оплатыChanged();
                }
            }
        }
        private global::System.String _Способ_оплаты;
        partial void OnСпособ_оплатыChanging(global::System.String value);
        partial void OnСпособ_оплатыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_получения
        {
            get
            {
                return _Способ_получения;
            }
            set
            {
                if (_Способ_получения != value)
                {
                    OnСпособ_полученияChanging(value);
                    ReportPropertyChanging("Способ_получения");
                    _Способ_получения = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Способ_получения");
                    OnСпособ_полученияChanged();
                }
            }
        }
        private global::System.String _Способ_получения;
        partial void OnСпособ_полученияChanging(global::System.String value);
        partial void OnСпособ_полученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                if (_ФИО != value)
                {
                    OnФИОChanging(value);
                    ReportPropertyChanging("ФИО");
                    _ФИО = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ФИО");
                    OnФИОChanged();
                }
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Покупатель2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Покупатель2 : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Покупатель2.
        /// </summary>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="адрес">Исходное значение свойства Адрес.</param>
        /// <param name="дата_рождения">Исходное значение свойства Дата_рождения.</param>
        /// <param name="пол">Исходное значение свойства Пол.</param>
        /// <param name="userName">Исходное значение свойства UserName.</param>
        public static View_Покупатель2 CreateView_Покупатель2(global::System.Decimal телефон, global::System.String фИО, global::System.String адрес, global::System.DateTime дата_рождения, global::System.Boolean пол, global::System.String userName)
        {
            View_Покупатель2 view_Покупатель2 = new View_Покупатель2();
            view_Покупатель2.Телефон = телефон;
            view_Покупатель2.ФИО = фИО;
            view_Покупатель2.Адрес = адрес;
            view_Покупатель2.Дата_рождения = дата_рождения;
            view_Покупатель2.Пол = пол;
            view_Покупатель2.UserName = userName;
            return view_Покупатель2;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                if (_Телефон != value)
                {
                    OnТелефонChanging(value);
                    ReportPropertyChanging("Телефон");
                    _Телефон = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Телефон");
                    OnТелефонChanged();
                }
            }
        }
        private global::System.Decimal _Телефон;
        partial void OnТелефонChanging(global::System.Decimal value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                if (_ФИО != value)
                {
                    OnФИОChanging(value);
                    ReportPropertyChanging("ФИО");
                    _ФИО = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ФИО");
                    OnФИОChanged();
                }
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                if (_Адрес != value)
                {
                    OnАдресChanging(value);
                    ReportPropertyChanging("Адрес");
                    _Адрес = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Адрес");
                    OnАдресChanged();
                }
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_рождения
        {
            get
            {
                return _Дата_рождения;
            }
            set
            {
                if (_Дата_рождения != value)
                {
                    OnДата_рожденияChanging(value);
                    ReportPropertyChanging("Дата_рождения");
                    _Дата_рождения = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_рождения");
                    OnДата_рожденияChanged();
                }
            }
        }
        private global::System.DateTime _Дата_рождения;
        partial void OnДата_рожденияChanging(global::System.DateTime value);
        partial void OnДата_рожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Пол
        {
            get
            {
                return _Пол;
            }
            set
            {
                if (_Пол != value)
                {
                    OnПолChanging(value);
                    ReportPropertyChanging("Пол");
                    _Пол = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Пол");
                    OnПолChanged();
                }
            }
        }
        private global::System.Boolean _Пол;
        partial void OnПолChanging(global::System.Boolean value);
        partial void OnПолChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Пользователь")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Пользователь : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Пользователь.
        /// </summary>
        /// <param name="userName">Исходное значение свойства UserName.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="адрес">Исходное значение свойства Адрес.</param>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="номер_кредитной_карты">Исходное значение свойства Номер_кредитной_карты.</param>
        /// <param name="срок_истечения">Исходное значение свойства Срок_истечения.</param>
        /// <param name="дата_регистрации">Исходное значение свойства Дата_регистрации.</param>
        /// <param name="дата_рождения">Исходное значение свойства Дата_рождения.</param>
        /// <param name="пол">Исходное значение свойства Пол.</param>
        public static View_Пользователь CreateView_Пользователь(global::System.String userName, global::System.String фИО, global::System.String адрес, global::System.Decimal телефон, global::System.Decimal номер_кредитной_карты, global::System.DateTime срок_истечения, global::System.DateTime дата_регистрации, global::System.DateTime дата_рождения, global::System.Boolean пол)
        {
            View_Пользователь view_Пользователь = new View_Пользователь();
            view_Пользователь.UserName = userName;
            view_Пользователь.ФИО = фИО;
            view_Пользователь.Адрес = адрес;
            view_Пользователь.Телефон = телефон;
            view_Пользователь.Номер_кредитной_карты = номер_кредитной_карты;
            view_Пользователь.Срок_истечения = срок_истечения;
            view_Пользователь.Дата_регистрации = дата_регистрации;
            view_Пользователь.Дата_рождения = дата_рождения;
            view_Пользователь.Пол = пол;
            return view_Пользователь;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                if (_ФИО != value)
                {
                    OnФИОChanging(value);
                    ReportPropertyChanging("ФИО");
                    _ФИО = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ФИО");
                    OnФИОChanged();
                }
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                if (_Адрес != value)
                {
                    OnАдресChanging(value);
                    ReportPropertyChanging("Адрес");
                    _Адрес = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Адрес");
                    OnАдресChanged();
                }
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                if (_Телефон != value)
                {
                    OnТелефонChanging(value);
                    ReportPropertyChanging("Телефон");
                    _Телефон = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Телефон");
                    OnТелефонChanged();
                }
            }
        }
        private global::System.Decimal _Телефон;
        partial void OnТелефонChanging(global::System.Decimal value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Номер_кредитной_карты
        {
            get
            {
                return _Номер_кредитной_карты;
            }
            set
            {
                if (_Номер_кредитной_карты != value)
                {
                    OnНомер_кредитной_картыChanging(value);
                    ReportPropertyChanging("Номер_кредитной_карты");
                    _Номер_кредитной_карты = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Номер_кредитной_карты");
                    OnНомер_кредитной_картыChanged();
                }
            }
        }
        private global::System.Decimal _Номер_кредитной_карты;
        partial void OnНомер_кредитной_картыChanging(global::System.Decimal value);
        partial void OnНомер_кредитной_картыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Срок_истечения
        {
            get
            {
                return _Срок_истечения;
            }
            set
            {
                if (_Срок_истечения != value)
                {
                    OnСрок_истеченияChanging(value);
                    ReportPropertyChanging("Срок_истечения");
                    _Срок_истечения = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Срок_истечения");
                    OnСрок_истеченияChanged();
                }
            }
        }
        private global::System.DateTime _Срок_истечения;
        partial void OnСрок_истеченияChanging(global::System.DateTime value);
        partial void OnСрок_истеченияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_регистрации
        {
            get
            {
                return _Дата_регистрации;
            }
            set
            {
                if (_Дата_регистрации != value)
                {
                    OnДата_регистрацииChanging(value);
                    ReportPropertyChanging("Дата_регистрации");
                    _Дата_регистрации = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_регистрации");
                    OnДата_регистрацииChanged();
                }
            }
        }
        private global::System.DateTime _Дата_регистрации;
        partial void OnДата_регистрацииChanging(global::System.DateTime value);
        partial void OnДата_регистрацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_рождения
        {
            get
            {
                return _Дата_рождения;
            }
            set
            {
                if (_Дата_рождения != value)
                {
                    OnДата_рожденияChanging(value);
                    ReportPropertyChanging("Дата_рождения");
                    _Дата_рождения = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Дата_рождения");
                    OnДата_рожденияChanged();
                }
            }
        }
        private global::System.DateTime _Дата_рождения;
        partial void OnДата_рожденияChanging(global::System.DateTime value);
        partial void OnДата_рожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Пол
        {
            get
            {
                return _Пол;
            }
            set
            {
                if (_Пол != value)
                {
                    OnПолChanging(value);
                    ReportPropertyChanging("Пол");
                    _Пол = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Пол");
                    OnПолChanged();
                }
            }
        }
        private global::System.Boolean _Пол;
        partial void OnПолChanging(global::System.Boolean value);
        partial void OnПолChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Образование
        {
            get
            {
                return _Образование;
            }
            set
            {
                OnОбразованиеChanging(value);
                ReportPropertyChanging("Образование");
                _Образование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Образование");
                OnОбразованиеChanged();
            }
        }
        private global::System.String _Образование;
        partial void OnОбразованиеChanging(global::System.String value);
        partial void OnОбразованиеChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Товар")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Товар : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Товар.
        /// </summary>
        /// <param name="цена_товара">Исходное значение свойства Цена_товара.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        public static View_Товар CreateView_Товар(global::System.Decimal цена_товара, global::System.String название)
        {
            View_Товар view_Товар = new View_Товар();
            view_Товар.Цена_товара = цена_товара;
            view_Товар.Название = название;
            return view_Товар;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Цена_товара
        {
            get
            {
                return _Цена_товара;
            }
            set
            {
                if (_Цена_товара != value)
                {
                    OnЦена_товараChanging(value);
                    ReportPropertyChanging("Цена_товара");
                    _Цена_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Цена_товара");
                    OnЦена_товараChanged();
                }
            }
        }
        private global::System.Decimal _Цена_товара;
        partial void OnЦена_товараChanging(global::System.Decimal value);
        partial void OnЦена_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                if (_Название != value)
                {
                    OnНазваниеChanging(value);
                    ReportPropertyChanging("Название");
                    _Название = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Название");
                    OnНазваниеChanged();
                }
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="View_Товары")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Товары : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта View_Товары.
        /// </summary>
        /// <param name="цена_товара">Исходное значение свойства Цена_товара.</param>
        /// <param name="вес_товара">Исходное значение свойства Вес_товара.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="категория">Исходное значение свойства Категория.</param>
        public static View_Товары CreateView_Товары(global::System.Decimal цена_товара, global::System.Decimal вес_товара, global::System.String название, global::System.String категория)
        {
            View_Товары view_Товары = new View_Товары();
            view_Товары.Цена_товара = цена_товара;
            view_Товары.Вес_товара = вес_товара;
            view_Товары.Название = название;
            view_Товары.Категория = категория;
            return view_Товары;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Цена_товара
        {
            get
            {
                return _Цена_товара;
            }
            set
            {
                if (_Цена_товара != value)
                {
                    OnЦена_товараChanging(value);
                    ReportPropertyChanging("Цена_товара");
                    _Цена_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Цена_товара");
                    OnЦена_товараChanged();
                }
            }
        }
        private global::System.Decimal _Цена_товара;
        partial void OnЦена_товараChanging(global::System.Decimal value);
        partial void OnЦена_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Вес_товара
        {
            get
            {
                return _Вес_товара;
            }
            set
            {
                if (_Вес_товара != value)
                {
                    OnВес_товараChanging(value);
                    ReportPropertyChanging("Вес_товара");
                    _Вес_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Вес_товара");
                    OnВес_товараChanged();
                }
            }
        }
        private global::System.Decimal _Вес_товара;
        partial void OnВес_товараChanging(global::System.Decimal value);
        partial void OnВес_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Длина
        {
            get
            {
                return _Длина;
            }
            set
            {
                OnДлинаChanging(value);
                ReportPropertyChanging("Длина");
                _Длина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Длина");
                OnДлинаChanged();
            }
        }
        private Nullable<global::System.Int64> _Длина;
        partial void OnДлинаChanging(Nullable<global::System.Int64> value);
        partial void OnДлинаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Ширина
        {
            get
            {
                return _Ширина;
            }
            set
            {
                OnШиринаChanging(value);
                ReportPropertyChanging("Ширина");
                _Ширина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ширина");
                OnШиринаChanged();
            }
        }
        private Nullable<global::System.Int64> _Ширина;
        partial void OnШиринаChanging(Nullable<global::System.Int64> value);
        partial void OnШиринаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Высота
        {
            get
            {
                return _Высота;
            }
            set
            {
                OnВысотаChanging(value);
                ReportPropertyChanging("Высота");
                _Высота = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Высота");
                OnВысотаChanged();
            }
        }
        private Nullable<global::System.Int64> _Высота;
        partial void OnВысотаChanging(Nullable<global::System.Int64> value);
        partial void OnВысотаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Изображение
        {
            get
            {
                return StructuralObject.GetValidValue(_Изображение);
            }
            set
            {
                OnИзображениеChanging(value);
                ReportPropertyChanging("Изображение");
                _Изображение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Изображение");
                OnИзображениеChanged();
            }
        }
        private global::System.Byte[] _Изображение;
        partial void OnИзображениеChanging(global::System.Byte[] value);
        partial void OnИзображениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Уникальные_характеристики
        {
            get
            {
                return _Уникальные_характеристики;
            }
            set
            {
                OnУникальные_характеристикиChanging(value);
                ReportPropertyChanging("Уникальные_характеристики");
                _Уникальные_характеристики = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Уникальные_характеристики");
                OnУникальные_характеристикиChanged();
            }
        }
        private global::System.String _Уникальные_характеристики;
        partial void OnУникальные_характеристикиChanging(global::System.String value);
        partial void OnУникальные_характеристикиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                if (_Название != value)
                {
                    OnНазваниеChanging(value);
                    ReportPropertyChanging("Название");
                    _Название = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Название");
                    OnНазваниеChanged();
                }
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Гарантия_мес
        {
            get
            {
                return _Гарантия_мес;
            }
            set
            {
                OnГарантия_месChanging(value);
                ReportPropertyChanging("Гарантия_мес");
                _Гарантия_мес = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Гарантия_мес");
                OnГарантия_месChanged();
            }
        }
        private Nullable<global::System.Int32> _Гарантия_мес;
        partial void OnГарантия_месChanging(Nullable<global::System.Int32> value);
        partial void OnГарантия_месChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Разрешение_на_возврат_товара
        {
            get
            {
                return _Разрешение_на_возврат_товара;
            }
            set
            {
                OnРазрешение_на_возврат_товараChanging(value);
                ReportPropertyChanging("Разрешение_на_возврат_товара");
                _Разрешение_на_возврат_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Разрешение_на_возврат_товара");
                OnРазрешение_на_возврат_товараChanged();
            }
        }
        private Nullable<global::System.Boolean> _Разрешение_на_возврат_товара;
        partial void OnРазрешение_на_возврат_товараChanging(Nullable<global::System.Boolean> value);
        partial void OnРазрешение_на_возврат_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Категория
        {
            get
            {
                return _Категория;
            }
            set
            {
                if (_Категория != value)
                {
                    OnКатегорияChanging(value);
                    ReportPropertyChanging("Категория");
                    _Категория = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Категория");
                    OnКатегорияChanged();
                }
            }
        }
        private global::System.String _Категория;
        partial void OnКатегорияChanging(global::System.String value);
        partial void OnКатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Подкатегория
        {
            get
            {
                return _Подкатегория;
            }
            set
            {
                OnПодкатегорияChanging(value);
                ReportPropertyChanging("Подкатегория");
                _Подкатегория = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Подкатегория");
                OnПодкатегорияChanged();
            }
        }
        private global::System.String _Подкатегория;
        partial void OnПодкатегорияChanging(global::System.String value);
        partial void OnПодкатегорияChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Доставка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Доставка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Доставка.
        /// </summary>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="суммарный_вес">Исходное значение свойства Суммарный_вес.</param>
        /// <param name="суммарный_объем">Исходное значение свойства Суммарный_объем.</param>
        /// <param name="дата_доставки">Исходное значение свойства Дата_доставки.</param>
        /// <param name="удаленность_от_офиса_км">Исходное значение свойства Удаленность_от_офиса_км.</param>
        /// <param name="стоимость_доставки">Исходное значение свойства Стоимость_доставки.</param>
        /// <param name="статус_доставки">Исходное значение свойства Статус_доставки.</param>
        /// <param name="вид_доставки">Исходное значение свойства Вид_доставки.</param>
        /// <param name="табельный_номер">Исходное значение свойства Табельный_номер.</param>
        public static Доставка CreateДоставка(global::System.Int64 c__заказа, global::System.Decimal суммарный_вес, global::System.Int32 суммарный_объем, global::System.DateTime дата_доставки, global::System.Int64 удаленность_от_офиса_км, global::System.Decimal стоимость_доставки, global::System.String статус_доставки, global::System.String вид_доставки, global::System.Int64 табельный_номер)
        {
            Доставка доставка = new Доставка();
            доставка.C__заказа = c__заказа;
            доставка.Суммарный_вес = суммарный_вес;
            доставка.Суммарный_объем = суммарный_объем;
            доставка.Дата_доставки = дата_доставки;
            доставка.Удаленность_от_офиса_км = удаленность_от_офиса_км;
            доставка.Стоимость_доставки = стоимость_доставки;
            доставка.Статус_доставки = статус_доставки;
            доставка.Вид_доставки = вид_доставки;
            доставка.Табельный_номер = табельный_номер;
            return доставка;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                if (_C__заказа != value)
                {
                    OnC__заказаChanging(value);
                    ReportPropertyChanging("C__заказа");
                    _C__заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C__заказа");
                    OnC__заказаChanged();
                }
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Суммарный_вес
        {
            get
            {
                return _Суммарный_вес;
            }
            set
            {
                OnСуммарный_весChanging(value);
                ReportPropertyChanging("Суммарный_вес");
                _Суммарный_вес = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Суммарный_вес");
                OnСуммарный_весChanged();
            }
        }
        private global::System.Decimal _Суммарный_вес;
        partial void OnСуммарный_весChanging(global::System.Decimal value);
        partial void OnСуммарный_весChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Суммарный_объем
        {
            get
            {
                return _Суммарный_объем;
            }
            set
            {
                OnСуммарный_объемChanging(value);
                ReportPropertyChanging("Суммарный_объем");
                _Суммарный_объем = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Суммарный_объем");
                OnСуммарный_объемChanged();
            }
        }
        private global::System.Int32 _Суммарный_объем;
        partial void OnСуммарный_объемChanging(global::System.Int32 value);
        partial void OnСуммарный_объемChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_доставки
        {
            get
            {
                return _Дата_доставки;
            }
            set
            {
                OnДата_доставкиChanging(value);
                ReportPropertyChanging("Дата_доставки");
                _Дата_доставки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_доставки");
                OnДата_доставкиChanged();
            }
        }
        private global::System.DateTime _Дата_доставки;
        partial void OnДата_доставкиChanging(global::System.DateTime value);
        partial void OnДата_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Время_доставки
        {
            get
            {
                return _Время_доставки;
            }
            set
            {
                OnВремя_доставкиChanging(value);
                ReportPropertyChanging("Время_доставки");
                _Время_доставки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Время_доставки");
                OnВремя_доставкиChanged();
            }
        }
        private Nullable<global::System.DateTime> _Время_доставки;
        partial void OnВремя_доставкиChanging(Nullable<global::System.DateTime> value);
        partial void OnВремя_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Удаленность_от_офиса_км
        {
            get
            {
                return _Удаленность_от_офиса_км;
            }
            set
            {
                OnУдаленность_от_офиса_кмChanging(value);
                ReportPropertyChanging("Удаленность_от_офиса_км");
                _Удаленность_от_офиса_км = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Удаленность_от_офиса_км");
                OnУдаленность_от_офиса_кмChanged();
            }
        }
        private global::System.Int64 _Удаленность_от_офиса_км;
        partial void OnУдаленность_от_офиса_кмChanging(global::System.Int64 value);
        partial void OnУдаленность_от_офиса_кмChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_доставки
        {
            get
            {
                return _Стоимость_доставки;
            }
            set
            {
                OnСтоимость_доставкиChanging(value);
                ReportPropertyChanging("Стоимость_доставки");
                _Стоимость_доставки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Стоимость_доставки");
                OnСтоимость_доставкиChanged();
            }
        }
        private global::System.Decimal _Стоимость_доставки;
        partial void OnСтоимость_доставкиChanging(global::System.Decimal value);
        partial void OnСтоимость_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Статус_доставки
        {
            get
            {
                return _Статус_доставки;
            }
            set
            {
                OnСтатус_доставкиChanging(value);
                ReportPropertyChanging("Статус_доставки");
                _Статус_доставки = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Статус_доставки");
                OnСтатус_доставкиChanged();
            }
        }
        private global::System.String _Статус_доставки;
        partial void OnСтатус_доставкиChanging(global::System.String value);
        partial void OnСтатус_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Вид_доставки
        {
            get
            {
                return _Вид_доставки;
            }
            set
            {
                OnВид_доставкиChanging(value);
                ReportPropertyChanging("Вид_доставки");
                _Вид_доставки = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Вид_доставки");
                OnВид_доставкиChanged();
            }
        }
        private global::System.String _Вид_доставки;
        partial void OnВид_доставкиChanging(global::System.String value);
        partial void OnВид_доставкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Табельный_номер
        {
            get
            {
                return _Табельный_номер;
            }
            set
            {
                OnТабельный_номерChanging(value);
                ReportPropertyChanging("Табельный_номер");
                _Табельный_номер = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Табельный_номер");
                OnТабельный_номерChanged();
            }
        }
        private global::System.Int64 _Табельный_номер;
        partial void OnТабельный_номерChanging(global::System.Int64 value);
        partial void OnТабельный_номерChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Доставка_Заказ", "Заказ")]
        public Заказ Заказ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Доставка_Заказ", "Заказ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Доставка_Заказ", "Заказ").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Заказ> ЗаказReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Доставка_Заказ", "Заказ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Заказ>("KompShopModel.FK_Доставка_Заказ", "Заказ", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Доставка_Сотрудник", "Сотрудник")]
        public Сотрудник Сотрудник
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сотрудник>("KompShopModel.FK_Доставка_Сотрудник", "Сотрудник").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сотрудник>("KompShopModel.FK_Доставка_Сотрудник", "Сотрудник").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Сотрудник> СотрудникReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сотрудник>("KompShopModel.FK_Доставка_Сотрудник", "Сотрудник");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Сотрудник>("KompShopModel.FK_Доставка_Сотрудник", "Сотрудник", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Заказ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Заказ : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Заказ.
        /// </summary>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="дата_заказа">Исходное значение свойства Дата_заказа.</param>
        /// <param name="статус_заказа">Исходное значение свойства Статус_заказа.</param>
        /// <param name="стоимость_заказа">Исходное значение свойства Стоимость_заказа.</param>
        /// <param name="способ_оплаты">Исходное значение свойства Способ_оплаты.</param>
        /// <param name="способ_получения">Исходное значение свойства Способ_получения.</param>
        public static Заказ CreateЗаказ(global::System.Int64 c__заказа, global::System.DateTime дата_заказа, global::System.String статус_заказа, global::System.Decimal стоимость_заказа, global::System.String способ_оплаты, global::System.String способ_получения)
        {
            Заказ заказ = new Заказ();
            заказ.C__заказа = c__заказа;
            заказ.Дата_заказа = дата_заказа;
            заказ.Статус_заказа = статус_заказа;
            заказ.Стоимость_заказа = стоимость_заказа;
            заказ.Способ_оплаты = способ_оплаты;
            заказ.Способ_получения = способ_получения;
            return заказ;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                if (_C__заказа != value)
                {
                    OnC__заказаChanging(value);
                    ReportPropertyChanging("C__заказа");
                    _C__заказа = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C__заказа");
                    OnC__заказаChanged();
                }
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_заказа
        {
            get
            {
                return _Дата_заказа;
            }
            set
            {
                OnДата_заказаChanging(value);
                ReportPropertyChanging("Дата_заказа");
                _Дата_заказа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_заказа");
                OnДата_заказаChanged();
            }
        }
        private global::System.DateTime _Дата_заказа;
        partial void OnДата_заказаChanging(global::System.DateTime value);
        partial void OnДата_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Время_заказа
        {
            get
            {
                return _Время_заказа;
            }
            set
            {
                OnВремя_заказаChanging(value);
                ReportPropertyChanging("Время_заказа");
                _Время_заказа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Время_заказа");
                OnВремя_заказаChanged();
            }
        }
        private Nullable<global::System.DateTime> _Время_заказа;
        partial void OnВремя_заказаChanging(Nullable<global::System.DateTime> value);
        partial void OnВремя_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Статус_заказа
        {
            get
            {
                return _Статус_заказа;
            }
            set
            {
                OnСтатус_заказаChanging(value);
                ReportPropertyChanging("Статус_заказа");
                _Статус_заказа = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Статус_заказа");
                OnСтатус_заказаChanged();
            }
        }
        private global::System.String _Статус_заказа;
        partial void OnСтатус_заказаChanging(global::System.String value);
        partial void OnСтатус_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Стоимость_заказа
        {
            get
            {
                return _Стоимость_заказа;
            }
            set
            {
                OnСтоимость_заказаChanging(value);
                ReportPropertyChanging("Стоимость_заказа");
                _Стоимость_заказа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Стоимость_заказа");
                OnСтоимость_заказаChanged();
            }
        }
        private global::System.Decimal _Стоимость_заказа;
        partial void OnСтоимость_заказаChanging(global::System.Decimal value);
        partial void OnСтоимость_заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_оплаты
        {
            get
            {
                return _Способ_оплаты;
            }
            set
            {
                OnСпособ_оплатыChanging(value);
                ReportPropertyChanging("Способ_оплаты");
                _Способ_оплаты = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Способ_оплаты");
                OnСпособ_оплатыChanged();
            }
        }
        private global::System.String _Способ_оплаты;
        partial void OnСпособ_оплатыChanging(global::System.String value);
        partial void OnСпособ_оплатыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Способ_получения
        {
            get
            {
                return _Способ_получения;
            }
            set
            {
                OnСпособ_полученияChanging(value);
                ReportPropertyChanging("Способ_получения");
                _Способ_получения = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Способ_получения");
                OnСпособ_полученияChanged();
            }
        }
        private global::System.String _Способ_получения;
        partial void OnСпособ_полученияChanging(global::System.String value);
        partial void OnСпособ_полученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Доставка_Заказ", "Доставка")]
        public Доставка Доставка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Доставка>("KompShopModel.FK_Доставка_Заказ", "Доставка").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Доставка>("KompShopModel.FK_Доставка_Заказ", "Доставка").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Доставка> ДоставкаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Доставка>("KompShopModel.FK_Доставка_Заказ", "Доставка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Доставка>("KompShopModel.FK_Доставка_Заказ", "Доставка", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Товар_Заказ", "Заказ_Товар")]
        public EntityCollection<Заказ_Товар> Заказ_Товар
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Заказ_Товар>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ_Товар");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Заказ_Товар>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ_Товар", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Покупатель", "Покупатель")]
        public Покупатель Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Заказ_Покупатель", "Покупатель").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Заказ_Покупатель", "Покупатель").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Покупатель> ПокупательReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Заказ_Покупатель", "Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Покупатель>("KompShopModel.FK_Заказ_Покупатель", "Покупатель", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Заказ_Товар")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Заказ_Товар : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Заказ_Товар.
        /// </summary>
        /// <param name="c__заказа">Исходное значение свойства C__заказа.</param>
        /// <param name="id_товара">Исходное значение свойства id_товара.</param>
        /// <param name="idZakTov">Исходное значение свойства IdZakTov.</param>
        public static Заказ_Товар CreateЗаказ_Товар(global::System.Int64 c__заказа, global::System.Int64 id_товара, global::System.Int64 idZakTov)
        {
            Заказ_Товар заказ_Товар = new Заказ_Товар();
            заказ_Товар.C__заказа = c__заказа;
            заказ_Товар.id_товара = id_товара;
            заказ_Товар.IdZakTov = idZakTov;
            return заказ_Товар;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 C__заказа
        {
            get
            {
                return _C__заказа;
            }
            set
            {
                OnC__заказаChanging(value);
                ReportPropertyChanging("C__заказа");
                _C__заказа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C__заказа");
                OnC__заказаChanged();
            }
        }
        private global::System.Int64 _C__заказа;
        partial void OnC__заказаChanging(global::System.Int64 value);
        partial void OnC__заказаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_товара
        {
            get
            {
                return _id_товара;
            }
            set
            {
                Onid_товараChanging(value);
                ReportPropertyChanging("id_товара");
                _id_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_товара");
                Onid_товараChanged();
            }
        }
        private global::System.Int64 _id_товара;
        partial void Onid_товараChanging(global::System.Int64 value);
        partial void Onid_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdZakTov
        {
            get
            {
                return _IdZakTov;
            }
            set
            {
                if (_IdZakTov != value)
                {
                    OnIdZakTovChanging(value);
                    ReportPropertyChanging("IdZakTov");
                    _IdZakTov = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdZakTov");
                    OnIdZakTovChanged();
                }
            }
        }
        private global::System.Int64 _IdZakTov;
        partial void OnIdZakTovChanging(global::System.Int64 value);
        partial void OnIdZakTovChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Количество
        {
            get
            {
                return _Количество;
            }
            set
            {
                OnКоличествоChanging(value);
                ReportPropertyChanging("Количество");
                _Количество = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Количество");
                OnКоличествоChanged();
            }
        }
        private Nullable<global::System.Int32> _Количество;
        partial void OnКоличествоChanging(Nullable<global::System.Int32> value);
        partial void OnКоличествоChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Товар_Заказ", "Заказ")]
        public Заказ Заказ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Заказ> ЗаказReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Заказ>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Заказ>("KompShopModel.FK_Заказ_Товар_Заказ", "Заказ", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Товар_Товар", "Товар")]
        public Товар Товар
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Товар").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Товар").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Товар> ТоварReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Товар");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Товар", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Категория")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Категория : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Категория.
        /// </summary>
        /// <param name="категория1">Исходное значение свойства Категория1.</param>
        /// <param name="подкатегория">Исходное значение свойства Подкатегория.</param>
        public static Категория CreateКатегория(global::System.String категория1, global::System.String подкатегория)
        {
            Категория категория = new Категория();
            категория.Категория1 = категория1;
            категория.Подкатегория = подкатегория;
            return категория;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Категория1
        {
            get
            {
                return _Категория1;
            }
            set
            {
                OnКатегория1Changing(value);
                ReportPropertyChanging("Категория1");
                _Категория1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Категория1");
                OnКатегория1Changed();
            }
        }
        private global::System.String _Категория1;
        partial void OnКатегория1Changing(global::System.String value);
        partial void OnКатегория1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Подкатегория
        {
            get
            {
                return _Подкатегория;
            }
            set
            {
                if (_Подкатегория != value)
                {
                    OnПодкатегорияChanging(value);
                    ReportPropertyChanging("Подкатегория");
                    _Подкатегория = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Подкатегория");
                    OnПодкатегорияChanged();
                }
            }
        }
        private global::System.String _Подкатегория;
        partial void OnПодкатегорияChanging(global::System.String value);
        partial void OnПодкатегорияChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Товар_Категория1", "Товар")]
        public EntityCollection<Товар> Товар
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Товар>("KompShopModel.FK_Товар_Категория1", "Товар");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Товар>("KompShopModel.FK_Товар_Категория1", "Товар", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Кредитная_карта")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Кредитная_карта : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Кредитная_карта.
        /// </summary>
        /// <param name="номер_кредитной_карты">Исходное значение свойства Номер_кредитной_карты.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="проверочный_код">Исходное значение свойства Проверочный_код.</param>
        /// <param name="срок_истечения">Исходное значение свойства Срок_истечения.</param>
        /// <param name="имя_владельца">Исходное значение свойства Имя_владельца.</param>
        public static Кредитная_карта CreateКредитная_карта(global::System.Decimal номер_кредитной_карты, global::System.Guid userId, global::System.String проверочный_код, global::System.DateTime срок_истечения, global::System.String имя_владельца)
        {
            Кредитная_карта кредитная_карта = new Кредитная_карта();
            кредитная_карта.Номер_кредитной_карты = номер_кредитной_карты;
            кредитная_карта.UserId = userId;
            кредитная_карта.Проверочный_код = проверочный_код;
            кредитная_карта.Срок_истечения = срок_истечения;
            кредитная_карта.Имя_владельца = имя_владельца;
            return кредитная_карта;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Номер_кредитной_карты
        {
            get
            {
                return _Номер_кредитной_карты;
            }
            set
            {
                if (_Номер_кредитной_карты != value)
                {
                    OnНомер_кредитной_картыChanging(value);
                    ReportPropertyChanging("Номер_кредитной_карты");
                    _Номер_кредитной_карты = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Номер_кредитной_карты");
                    OnНомер_кредитной_картыChanged();
                }
            }
        }
        private global::System.Decimal _Номер_кредитной_карты;
        partial void OnНомер_кредитной_картыChanging(global::System.Decimal value);
        partial void OnНомер_кредитной_картыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Проверочный_код
        {
            get
            {
                return _Проверочный_код;
            }
            set
            {
                OnПроверочный_кодChanging(value);
                ReportPropertyChanging("Проверочный_код");
                _Проверочный_код = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Проверочный_код");
                OnПроверочный_кодChanged();
            }
        }
        private global::System.String _Проверочный_код;
        partial void OnПроверочный_кодChanging(global::System.String value);
        partial void OnПроверочный_кодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Срок_истечения
        {
            get
            {
                return _Срок_истечения;
            }
            set
            {
                OnСрок_истеченияChanging(value);
                ReportPropertyChanging("Срок_истечения");
                _Срок_истечения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Срок_истечения");
                OnСрок_истеченияChanged();
            }
        }
        private global::System.DateTime _Срок_истечения;
        partial void OnСрок_истеченияChanging(global::System.DateTime value);
        partial void OnСрок_истеченияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Имя_владельца
        {
            get
            {
                return _Имя_владельца;
            }
            set
            {
                OnИмя_владельцаChanging(value);
                ReportPropertyChanging("Имя_владельца");
                _Имя_владельца = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Имя_владельца");
                OnИмя_владельцаChanged();
            }
        }
        private global::System.String _Имя_владельца;
        partial void OnИмя_владельцаChanging(global::System.String value);
        partial void OnИмя_владельцаChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Кредитная_карта_Покупатель", "Покупатель")]
        public Покупатель Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Кредитная_карта_Покупатель", "Покупатель").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Кредитная_карта_Покупатель", "Покупатель").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Покупатель> ПокупательReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Кредитная_карта_Покупатель", "Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Покупатель>("KompShopModel.FK_Кредитная_карта_Покупатель", "Покупатель", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Оценка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Оценка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Оценка.
        /// </summary>
        /// <param name="оценка1">Исходное значение свойства Оценка1.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="id_товара">Исходное значение свойства id_товара.</param>
        /// <param name="id_оценки">Исходное значение свойства id_оценки.</param>
        public static Оценка CreateОценка(global::System.Byte оценка1, global::System.Guid userId, global::System.Int64 id_товара, global::System.Int64 id_оценки)
        {
            Оценка оценка = new Оценка();
            оценка.Оценка1 = оценка1;
            оценка.UserId = userId;
            оценка.id_товара = id_товара;
            оценка.id_оценки = id_оценки;
            return оценка;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Оценка1
        {
            get
            {
                return _Оценка1;
            }
            set
            {
                OnОценка1Changing(value);
                ReportPropertyChanging("Оценка1");
                _Оценка1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Оценка1");
                OnОценка1Changed();
            }
        }
        private global::System.Byte _Оценка1;
        partial void OnОценка1Changing(global::System.Byte value);
        partial void OnОценка1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_товара
        {
            get
            {
                return _id_товара;
            }
            set
            {
                Onid_товараChanging(value);
                ReportPropertyChanging("id_товара");
                _id_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_товара");
                Onid_товараChanged();
            }
        }
        private global::System.Int64 _id_товара;
        partial void Onid_товараChanging(global::System.Int64 value);
        partial void Onid_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_оценки
        {
            get
            {
                return _id_оценки;
            }
            set
            {
                if (_id_оценки != value)
                {
                    Onid_оценкиChanging(value);
                    ReportPropertyChanging("id_оценки");
                    _id_оценки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_оценки");
                    Onid_оценкиChanged();
                }
            }
        }
        private global::System.Int64 _id_оценки;
        partial void Onid_оценкиChanging(global::System.Int64 value);
        partial void Onid_оценкиChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Оценка_Покупатель", "Покупатель")]
        public Покупатель Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Оценка_Покупатель", "Покупатель").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Оценка_Покупатель", "Покупатель").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Покупатель> ПокупательReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Оценка_Покупатель", "Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Покупатель>("KompShopModel.FK_Оценка_Покупатель", "Покупатель", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Оценка_Товар", "Товар")]
        public Товар Товар
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Оценка_Товар", "Товар").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Оценка_Товар", "Товар").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Товар> ТоварReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Товар>("KompShopModel.FK_Оценка_Товар", "Товар");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Товар>("KompShopModel.FK_Оценка_Товар", "Товар", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Покупатель")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Покупатель : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Покупатель.
        /// </summary>
        /// <param name="адрес">Исходное значение свойства Адрес.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="дата_рождения">Исходное значение свойства Дата_рождения.</param>
        /// <param name="дата_регистрации">Исходное значение свойства Дата_регистрации.</param>
        /// <param name="пол">Исходное значение свойства Пол.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        public static Покупатель CreateПокупатель(global::System.String адрес, global::System.String фИО, global::System.DateTime дата_рождения, global::System.DateTime дата_регистрации, global::System.Boolean пол, global::System.Guid userId)
        {
            Покупатель покупатель = new Покупатель();
            покупатель.Адрес = адрес;
            покупатель.ФИО = фИО;
            покупатель.Дата_рождения = дата_рождения;
            покупатель.Дата_регистрации = дата_регистрации;
            покупатель.Пол = пол;
            покупатель.UserId = userId;
            return покупатель;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                OnАдресChanging(value);
                ReportPropertyChanging("Адрес");
                _Адрес = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Адрес");
                OnАдресChanged();
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_рождения
        {
            get
            {
                return _Дата_рождения;
            }
            set
            {
                OnДата_рожденияChanging(value);
                ReportPropertyChanging("Дата_рождения");
                _Дата_рождения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_рождения");
                OnДата_рожденияChanged();
            }
        }
        private global::System.DateTime _Дата_рождения;
        partial void OnДата_рожденияChanging(global::System.DateTime value);
        partial void OnДата_рожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_регистрации
        {
            get
            {
                return _Дата_регистрации;
            }
            set
            {
                OnДата_регистрацииChanging(value);
                ReportPropertyChanging("Дата_регистрации");
                _Дата_регистрации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_регистрации");
                OnДата_регистрацииChanged();
            }
        }
        private global::System.DateTime _Дата_регистрации;
        partial void OnДата_регистрацииChanging(global::System.DateTime value);
        partial void OnДата_регистрацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Пол
        {
            get
            {
                return _Пол;
            }
            set
            {
                OnПолChanging(value);
                ReportPropertyChanging("Пол");
                _Пол = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Пол");
                OnПолChanged();
            }
        }
        private global::System.Boolean _Пол;
        partial void OnПолChanging(global::System.Boolean value);
        partial void OnПолChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Образование
        {
            get
            {
                return _Образование;
            }
            set
            {
                OnОбразованиеChanging(value);
                ReportPropertyChanging("Образование");
                _Образование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Образование");
                OnОбразованиеChanged();
            }
        }
        private global::System.String _Образование;
        partial void OnОбразованиеChanging(global::System.String value);
        partial void OnОбразованиеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Покупатель_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK_Покупатель_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK_Покупатель_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("KompShopModel.FK_Покупатель_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("KompShopModel.FK_Покупатель_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Покупатель", "Заказ")]
        public EntityCollection<Заказ> Заказ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Заказ>("KompShopModel.FK_Заказ_Покупатель", "Заказ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Заказ>("KompShopModel.FK_Заказ_Покупатель", "Заказ", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Кредитная_карта_Покупатель", "Кредитная_карта")]
        public EntityCollection<Кредитная_карта> Кредитная_карта
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Кредитная_карта>("KompShopModel.FK_Кредитная_карта_Покупатель", "Кредитная_карта");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Кредитная_карта>("KompShopModel.FK_Кредитная_карта_Покупатель", "Кредитная_карта", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Оценка_Покупатель", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("KompShopModel.FK_Оценка_Покупатель", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("KompShopModel.FK_Оценка_Покупатель", "Оценка", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Телефон_Покупатель_Покупатель", "Телефон_Покупатель")]
        public EntityCollection<Телефон_Покупатель> Телефон_Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Телефон_Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Телефон_Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Телефон_Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Телефон_Покупатель", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Сотрудник")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Сотрудник : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Сотрудник.
        /// </summary>
        /// <param name="табельный_номер">Исходное значение свойства Табельный_номер.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="должность">Исходное значение свойства Должность.</param>
        /// <param name="e_mail">Исходное значение свойства E_mail.</param>
        public static Сотрудник CreateСотрудник(global::System.Int64 табельный_номер, global::System.String фИО, global::System.Int64 телефон, global::System.String должность, global::System.String e_mail)
        {
            Сотрудник сотрудник = new Сотрудник();
            сотрудник.Табельный_номер = табельный_номер;
            сотрудник.ФИО = фИО;
            сотрудник.Телефон = телефон;
            сотрудник.Должность = должность;
            сотрудник.E_mail = e_mail;
            return сотрудник;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Табельный_номер
        {
            get
            {
                return _Табельный_номер;
            }
            set
            {
                if (_Табельный_номер != value)
                {
                    OnТабельный_номерChanging(value);
                    ReportPropertyChanging("Табельный_номер");
                    _Табельный_номер = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Табельный_номер");
                    OnТабельный_номерChanged();
                }
            }
        }
        private global::System.Int64 _Табельный_номер;
        partial void OnТабельный_номерChanging(global::System.Int64 value);
        partial void OnТабельный_номерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Факс
        {
            get
            {
                return _Факс;
            }
            set
            {
                OnФаксChanging(value);
                ReportPropertyChanging("Факс");
                _Факс = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Факс");
                OnФаксChanged();
            }
        }
        private Nullable<global::System.Int64> _Факс;
        partial void OnФаксChanging(Nullable<global::System.Int64> value);
        partial void OnФаксChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                OnТелефонChanging(value);
                ReportPropertyChanging("Телефон");
                _Телефон = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Телефон");
                OnТелефонChanged();
            }
        }
        private global::System.Int64 _Телефон;
        partial void OnТелефонChanging(global::System.Int64 value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Должность
        {
            get
            {
                return _Должность;
            }
            set
            {
                OnДолжностьChanging(value);
                ReportPropertyChanging("Должность");
                _Должность = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Должность");
                OnДолжностьChanged();
            }
        }
        private global::System.String _Должность;
        partial void OnДолжностьChanging(global::System.String value);
        partial void OnДолжностьChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String E_mail
        {
            get
            {
                return _E_mail;
            }
            set
            {
                OnE_mailChanging(value);
                ReportPropertyChanging("E_mail");
                _E_mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("E_mail");
                OnE_mailChanged();
            }
        }
        private global::System.String _E_mail;
        partial void OnE_mailChanging(global::System.String value);
        partial void OnE_mailChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Доставка_Сотрудник", "Доставка")]
        public EntityCollection<Доставка> Доставка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Доставка>("KompShopModel.FK_Доставка_Сотрудник", "Доставка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Доставка>("KompShopModel.FK_Доставка_Сотрудник", "Доставка", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Телефон_Покупатель")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Телефон_Покупатель : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Телефон_Покупатель.
        /// </summary>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        public static Телефон_Покупатель CreateТелефон_Покупатель(global::System.Decimal телефон, global::System.Guid userId)
        {
            Телефон_Покупатель телефон_Покупатель = new Телефон_Покупатель();
            телефон_Покупатель.Телефон = телефон;
            телефон_Покупатель.UserId = userId;
            return телефон_Покупатель;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                if (_Телефон != value)
                {
                    OnТелефонChanging(value);
                    ReportPropertyChanging("Телефон");
                    _Телефон = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Телефон");
                    OnТелефонChanged();
                }
            }
        }
        private global::System.Decimal _Телефон;
        partial void OnТелефонChanging(global::System.Decimal value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Телефон_Покупатель_Покупатель", "Покупатель")]
        public Покупатель Покупатель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Покупатель").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Покупатель").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Покупатель> ПокупательReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Покупатель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Покупатель>("KompShopModel.FK_Телефон_Покупатель_Покупатель", "Покупатель", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KompShopModel", Name="Товар")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Товар : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Товар.
        /// </summary>
        /// <param name="id_товара">Исходное значение свойства id_товара.</param>
        /// <param name="цена_товара">Исходное значение свойства Цена_товара.</param>
        /// <param name="вес_товара">Исходное значение свойства Вес_товара.</param>
        /// <param name="подкатегория">Исходное значение свойства Подкатегория.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        public static Товар CreateТовар(global::System.Int64 id_товара, global::System.Decimal цена_товара, global::System.Decimal вес_товара, global::System.String подкатегория, global::System.String название)
        {
            Товар товар = new Товар();
            товар.id_товара = id_товара;
            товар.Цена_товара = цена_товара;
            товар.Вес_товара = вес_товара;
            товар.Подкатегория = подкатегория;
            товар.Название = название;
            return товар;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_товара
        {
            get
            {
                return _id_товара;
            }
            set
            {
                if (_id_товара != value)
                {
                    Onid_товараChanging(value);
                    ReportPropertyChanging("id_товара");
                    _id_товара = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_товара");
                    Onid_товараChanged();
                }
            }
        }
        private global::System.Int64 _id_товара;
        partial void Onid_товараChanging(global::System.Int64 value);
        partial void Onid_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Цена_товара
        {
            get
            {
                return _Цена_товара;
            }
            set
            {
                OnЦена_товараChanging(value);
                ReportPropertyChanging("Цена_товара");
                _Цена_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Цена_товара");
                OnЦена_товараChanged();
            }
        }
        private global::System.Decimal _Цена_товара;
        partial void OnЦена_товараChanging(global::System.Decimal value);
        partial void OnЦена_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Вес_товара
        {
            get
            {
                return _Вес_товара;
            }
            set
            {
                OnВес_товараChanging(value);
                ReportPropertyChanging("Вес_товара");
                _Вес_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Вес_товара");
                OnВес_товараChanged();
            }
        }
        private global::System.Decimal _Вес_товара;
        partial void OnВес_товараChanging(global::System.Decimal value);
        partial void OnВес_товараChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Длина
        {
            get
            {
                return _Длина;
            }
            set
            {
                OnДлинаChanging(value);
                ReportPropertyChanging("Длина");
                _Длина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Длина");
                OnДлинаChanged();
            }
        }
        private Nullable<global::System.Int64> _Длина;
        partial void OnДлинаChanging(Nullable<global::System.Int64> value);
        partial void OnДлинаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Ширина
        {
            get
            {
                return _Ширина;
            }
            set
            {
                OnШиринаChanging(value);
                ReportPropertyChanging("Ширина");
                _Ширина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ширина");
                OnШиринаChanged();
            }
        }
        private Nullable<global::System.Int64> _Ширина;
        partial void OnШиринаChanging(Nullable<global::System.Int64> value);
        partial void OnШиринаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Высота
        {
            get
            {
                return _Высота;
            }
            set
            {
                OnВысотаChanging(value);
                ReportPropertyChanging("Высота");
                _Высота = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Высота");
                OnВысотаChanged();
            }
        }
        private Nullable<global::System.Int64> _Высота;
        partial void OnВысотаChanging(Nullable<global::System.Int64> value);
        partial void OnВысотаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Изображение
        {
            get
            {
                return StructuralObject.GetValidValue(_Изображение);
            }
            set
            {
                OnИзображениеChanging(value);
                ReportPropertyChanging("Изображение");
                _Изображение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Изображение");
                OnИзображениеChanged();
            }
        }
        private global::System.Byte[] _Изображение;
        partial void OnИзображениеChanging(global::System.Byte[] value);
        partial void OnИзображениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Уникальные_характеристики
        {
            get
            {
                return _Уникальные_характеристики;
            }
            set
            {
                OnУникальные_характеристикиChanging(value);
                ReportPropertyChanging("Уникальные_характеристики");
                _Уникальные_характеристики = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Уникальные_характеристики");
                OnУникальные_характеристикиChanged();
            }
        }
        private global::System.String _Уникальные_характеристики;
        partial void OnУникальные_характеристикиChanging(global::System.String value);
        partial void OnУникальные_характеристикиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Подкатегория
        {
            get
            {
                return _Подкатегория;
            }
            set
            {
                OnПодкатегорияChanging(value);
                ReportPropertyChanging("Подкатегория");
                _Подкатегория = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Подкатегория");
                OnПодкатегорияChanged();
            }
        }
        private global::System.String _Подкатегория;
        partial void OnПодкатегорияChanging(global::System.String value);
        partial void OnПодкатегорияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Гарантия_мес
        {
            get
            {
                return _Гарантия_мес;
            }
            set
            {
                OnГарантия_месChanging(value);
                ReportPropertyChanging("Гарантия_мес");
                _Гарантия_мес = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Гарантия_мес");
                OnГарантия_месChanged();
            }
        }
        private Nullable<global::System.Int32> _Гарантия_мес;
        partial void OnГарантия_месChanging(Nullable<global::System.Int32> value);
        partial void OnГарантия_месChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Разрешение_на_возврат_товара
        {
            get
            {
                return _Разрешение_на_возврат_товара;
            }
            set
            {
                OnРазрешение_на_возврат_товараChanging(value);
                ReportPropertyChanging("Разрешение_на_возврат_товара");
                _Разрешение_на_возврат_товара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Разрешение_на_возврат_товара");
                OnРазрешение_на_возврат_товараChanged();
            }
        }
        private Nullable<global::System.Boolean> _Разрешение_на_возврат_товара;
        partial void OnРазрешение_на_возврат_товараChanging(Nullable<global::System.Boolean> value);
        partial void OnРазрешение_на_возврат_товараChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Заказ_Товар_Товар", "Заказ_Товар")]
        public EntityCollection<Заказ_Товар> Заказ_Товар
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Заказ_Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Заказ_Товар");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Заказ_Товар>("KompShopModel.FK_Заказ_Товар_Товар", "Заказ_Товар", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Товар_Категория1", "Категория")]
        public Категория Категория
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Категория>("KompShopModel.FK_Товар_Категория1", "Категория").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Категория>("KompShopModel.FK_Товар_Категория1", "Категория").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Категория> КатегорияReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Категория>("KompShopModel.FK_Товар_Категория1", "Категория");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Категория>("KompShopModel.FK_Товар_Категория1", "Категория", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KompShopModel", "FK_Оценка_Товар", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("KompShopModel.FK_Оценка_Товар", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("KompShopModel.FK_Оценка_Товар", "Оценка", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
